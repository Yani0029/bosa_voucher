<?php
/**
 * @file
 *  bosa_voucher.module
 *
 * Bosa Voucher module adds ability to send pdf voucher as attachments with
 * order confirmation mails. Replaces commerce_mail customer mail.
 * Replaces following BOSA modules:
 *  bosa_offer_mail
 *  bosa_attendees
 */

/**
 * Implements hook_menu()
 */
function bosa_voucher_menu() {
  $items = array();

  // Administration
  $items['admin/bosa/voucher'] = array(
    'title' => 'BOSA Voucher',
    'description' => 'Administer BOSA Voucher module',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('access bosa administration pages'),
    'file path' => drupal_get_path('module', 'system'),
    'file' => 'system.admin.inc',
    'weight' => -5,
  );

  // Administration
  $items['admin/bosa/voucher/mail'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bosa_voucher_mail_settings'),
    'title' => 'BOSA Mail settings',
    'description' => 'Change settings for voucher mail',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('access bosa administration pages'),
    'file path' => drupal_get_path('module', 'bosa_voucher'),
    'file' => 'bosa_voucher.admin.inc',
  );

  // Administration
  $items['admin/bosa/voucher/voucher'] = array(
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bosa_voucher_voucher_settings'),
    'title' => 'BOSA Voucher settings',
    'description' => 'Change settings for voucher mail',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('access bosa administration pages'),
    'file path' => drupal_get_path('module', 'bosa_voucher'),
    'file' => 'bosa_voucher.admin.inc',
  );

  // Ticket registration
  $items['bosa/voucher/ticket'] = array(
    'page callback' => 'bosa_voucher_ticket_page',
    'title' => 'BOSA tickets',
    'description' => '',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('access content'), 
    'file path' => drupal_get_path('module', 'bosa_voucher'),
    'file' => 'bosa_voucher.pages.inc',
  );

  // Product attendee page
  $items['bosa/voucher/product'] = array(
    'page callback' => 'bosa_voucher_product_page',
    'title' => 'BOSA tickets',
    'description' => '',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('access content'), 
    'file path' => drupal_get_path('module', 'bosa_voucher'),
    'file' => 'bosa_voucher.pages.inc',
  );

  // Product attendee ajax callback
  $items['bosa/voucher/product/ajax'] = array(
    'page callback' => 'bosa_voucher_product_page_ajax',
    'title' => 'BOSA tickets',
    'description' => '',
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('access content'), 
    'file path' => drupal_get_path('module', 'bosa_voucher'),
    'file' => 'bosa_voucher.pages.inc',
  );
  // Direct link for pdf generation
  $items['bosa/pdf'] = array(
    'page callback' => 'bosa_voucher_pdf',
    'title' => 'BOSA voucher pdf',
    'description' => '',
    'access arguments' => array('access content'), 
    'file path' => drupal_get_path('module', 'bosa_voucher'),
    'file' => 'bosa_voucher.voucher.inc',
  );

  return $items;
}

/**
 * Implements hook_init()
 */
function bosa_voucher_init(){
  if(arg(0) == 'bosa' && arg(1) == 'voucher'){
    drupal_add_js(drupal_get_path('module', 'bosa_voucher') . '/js/bosa_voucher.js');
    drupal_add_css(drupal_get_path('module', 'bosa_voucher') . '/css/attendees.css');
  }
}

/**
 * Implements ctools plugin
 */
function bosa_voucher_bosa_link(){
  return array(
    'bosa_voucher' => array(
      'label' => 'bosa_voucher',
      'callback' => 'bosa_voucher_backoffice_page',
    ),
  );
}

/**
 * Plugin callback
 */
function bosa_voucher_backoffice_page(){
  return '<a href="/bosa/voucher/product/all"><i class="bosa-icon bosa-icon-group"></i>Deltagerlister</a>';
}

/**
 * Implements hook_mail()
 */
function bosa_voucher_mail($key, &$message, $params) {
  require_once drupal_get_path('module', 'bosa_voucher'). '/bosa_voucher.voucher.inc';
  // Generate and save pdf, returns path
  $pdf_path = bosa_voucher_save_pdf($params['order_id']);

  // Add pdf as attachment
  $attachment = array(
    'filecontent' => $pdf_path,
    'filename' => 'Voucher_' . $params['order_id'] . '.pdf',
    'filemime' => 'application/pdf',
  );

  // Build message
  $body = variable_get('bosa_voucher_mail_body');
  $subject = variable_get('bosa_voucher_mail_subject');

  // We need the order for token_replace
  $order = commerce_order_load($params['order_id']);
  // ...
  $body = token_replace($body, array('commerce-order' => $order));
  $subject = token_replace($subject , array('commerce-order' => $order));

  switch($key) {
    // It's not like theres a million posibilities
    case 'voucher':
      $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed';
      $message['subject'] = $subject;
      $message['body'][] = $body;
      $message['params']['attachments'][] = $attachment;
      break;
  }
}

/**
 * Implements hook_commerce_checkout_complete()
 */
function bosa_voucher_commerce_checkout_complete($order) {
  if(variable_get('bosa_voucher_mail_enable', FALSE) && $order->status =='checkout_complete'){
    $params['order_id'] = $order->order_id;

    drupal_mail('bosa_voucher', 'voucher', $order->mail, 'da', $params);
  }
}

/**
 * Handles saving ticket info o DB
 */
function bosa_voucher_save_ticket($line_item_id, $product_id, $uid){
  try {
    $nid = db_insert('bosa_voucher')
    ->fields(array(
      'line_item_id' => $line_item_id,
      'uid' => $uid,
      'product_id' => $product_id,
      'created' => REQUEST_TIME,
    ))
    ->execute();

    return true;

  }
  catch (PDOException $e ) {
    return false;
  }
}

/**
 * Handles getting ticket info from DB
 */
function bosa_voucher_check_ticket($line_item_id, $product_id = '%') {
  try {
    $result = db_select('bosa_voucher', 'b')
      ->fields('b')
      ->condition('product_id', $product_id, '=')
      ->condition('line_item_id', $line_item_id, '=')
      ->execute()
      ->fetchAll();

    if(count($result) == 1) {
      $result = array_shift($result);
      return array($result->created, $result->uid);
    }
  } catch (Exception $e) {
  }
}
